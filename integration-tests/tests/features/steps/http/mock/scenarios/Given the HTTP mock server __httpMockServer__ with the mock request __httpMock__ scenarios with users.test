test-def: Given the HTTP mock server <<httpMockServer>> with the mock request <<httpMock>> scenarios with users

    description = <<
        HTTP Mock  - Tets the Scenarios
        
        
        This test tells us if the HTTP mock step works well in terms of:
        
        -starting a server with a given port
        -serves data as requested
    >>

    step: Given the HTTP mock server <<{{httpMockServer}}>> with the mock request <<{{Return_two_users}}>>
        var httpMockServer = <<
            port: "12101"
            
        >>
        var Return_two_users = <<
            expectedRequest:
              method: GET
              url: /users
              scenario:
                scenarioName: return two users
                currentState: Started
                newState: null
            mockResponse:
              statusCode: 200
              headers:
                Content-Type: application/json
              body:
                bodyType: JSON
                content: "[\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Leanne Graham\",\r\n \
                  \   \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\",\r\n   \
                  \ \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\": \"\
                  Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\"\
                  ,\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\":\
                  \ \"81.1496\"\r\n      }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\"\
                  ,\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n      \"name\"\
                  : \"Romaguera-Crona\",\r\n      \"catchPhrase\": \"Multi-layered client-server\
                  \ neural-net\",\r\n      \"bs\": \"harness real-time e-markets\"\r\n    }\r\n\
                  \  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Ervin Howell\",\r\n    \"\
                  username\": \"Antonette\",\r\n    \"email\": \"Shanna@melissa.tv\",\r\n    \"\
                  address\": {\r\n      \"street\": \"Victor Plains\",\r\n      \"suite\": \"\
                  Suite 879\",\r\n      \"city\": \"Wisokyburgh\",\r\n      \"zipcode\": \"90566-7771\"\
                  ,\r\n      \"geo\": {\r\n        \"lat\": \"-43.9509\",\r\n        \"lng\":\
                  \ \"-34.4618\"\r\n      }\r\n    }\r\n  }\r\n]"
            
        >>
    step: Given the HTTP mock server <<{{httpMockServer}}>> with the mock request <<{{Post_one_more_user}}>>
        var httpMockServer = <<
            port: "12101"
            
        >>
        var Post_one_more_user = <<
            expectedRequest:
              method: POST
              url: /users
              scenario:
                scenarioName: Add another user in the list
                currentState: Started
                newState: return three users
            mockResponse:
              statusCode: 201
              headers:
                Content-Type: application/json
            
        >>
    step: Given the HTTP mock server <<{{httpMockServer}}>> with the mock request <<{{Return_three_users}}>>
        var httpMockServer = <<
            port: "12101"
            
        >>
        var Return_three_users = <<
            expectedRequest:
              method: GET
              url: /users
              scenario:
                scenarioName: Return three users
                currentState: return three users
                newState: null
            mockResponse:
              statusCode: 200
              headers:
                Content-Type: application/json
              body:
                bodyType: JSON
                content: "[\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Leanne Graham\",\r\n \
                  \   \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\",\r\n   \
                  \ \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\": \"\
                  Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\"\
                  ,\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\":\
                  \ \"81.1496\"\r\n      }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\"\
                  ,\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n      \"name\"\
                  : \"Romaguera-Crona\",\r\n      \"catchPhrase\": \"Multi-layered client-server\
                  \ neural-net\",\r\n      \"bs\": \"harness real-time e-markets\"\r\n    }\r\n\
                  \  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Ervin Howell\",\r\n    \"\
                  username\": \"Antonette\",\r\n    \"email\": \"Shanna@melissa.tv\",\r\n    \"\
                  address\": {\r\n      \"street\": \"Victor Plains\",\r\n      \"suite\": \"\
                  Suite 879\",\r\n      \"city\": \"Wisokyburgh\",\r\n      \"zipcode\": \"90566-7771\"\
                  ,\r\n      \"geo\": {\r\n        \"lat\": \"-43.9509\",\r\n        \"lng\":\
                  \ \"-34.4618\"\r\n      }\r\n    },\r\n    \"phone\": \"010-692-6593 x09125\"\
                  ,\r\n    \"website\": \"anastasia.net\",\r\n    \"company\": {\r\n      \"name\"\
                  : \"Deckow-Crist\",\r\n      \"catchPhrase\": \"Proactive didactic contingency\"\
                  ,\r\n      \"bs\": \"synergize scalable supply-chains\"\r\n    }\r\n  },\r\n\
                  \  {\r\n    \"id\": 3,\r\n    \"name\": \"Clementine Bauch\",\r\n    \"username\"\
                  : \"Samantha\",\r\n    \"email\": \"Nathan@yesenia.net\",\r\n    \"address\"\
                  : {\r\n      \"street\": \"Douglas Extension\",\r\n      \"suite\": \"Suite\
                  \ 847\",\r\n      \"city\": \"McKenziehaven\",\r\n      \"zipcode\": \"59590-4157\"\
                  ,\r\n      \"geo\": {\r\n        \"lat\": \"-68.6102\",\r\n        \"lng\":\
                  \ \"-47.0653\"\r\n      }\r\n    },\r\n    \"phone\": \"1-463-123-4447\",\r\n\
                  \    \"website\": \"ramiro.info\",\r\n    \"company\": {\r\n      \"name\":\
                  \ \"Romaguera-Jacobson\",\r\n      \"catchPhrase\": \"Face to face bifurcated\
                  \ interface\",\r\n      \"bs\": \"e-enable strategic applications\"\r\n    }\r\
                  \n  }\r\n  }\r\n]"
            
        >>
    step: When I execute the HTTP request <<{{get_list_with_two_users}}>>
        var get_list_with_two_users = <<
            method: GET
            url: http://localhost:12101/users
            followRedirects: true
            headers: {}
            
        >>
    step: Then the HTTP response should be <<{{verify_two_users}}>>
        var verify_two_users = <<
            expectedStatusCode: 200
            expectedBody:
              httpBodyVerifyMatchingType: JSON_VERIFY
              httpBodyType: JSON
              bodyVerify: "[\"=compareMode: exact\",\r\n  {\r\n    \"id\": 1,\r\n    \"name\"\
                : \"Leanne Graham\",\r\n    \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\"\
                ,\r\n    \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\"\
                : \"Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\"\
                ,\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\": \"\
                81.1496\"\r\n      }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n\
                \    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n      \"name\":\
                \ \"Romaguera-Crona\",\r\n      \"catchPhrase\": \"Multi-layered client-server\
                \ neural-net\",\r\n      \"bs\": \"harness real-time e-markets\"\r\n    }\r\n\
                \  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Ervin Howell\",\r\n    \"username\"\
                : \"Antonette\",\r\n    \"email\": \"Shanna@melissa.tv\",\r\n    \"address\":\
                \ {\r\n      \"street\": \"Victor Plains\",\r\n      \"suite\": \"Suite 879\"\
                ,\r\n      \"city\": \"Wisokyburgh\",\r\n      \"zipcode\": \"90566-7771\",\r\n\
                \      \"geo\": {\r\n        \"lat\": \"-43.9509\",\r\n        \"lng\": \"-34.4618\"\
                \r\n      }\r\n    }\r\n  }\r\n]"
            
        >>
    step: When I execute the HTTP request <<{{add_one_more_user}}>>
        var add_one_more_user = <<
            method: POST
            url: http://localhost:12101/users
            followRedirects: true
            headers:
              Content-Type: application/json
            body:
              bodyType: RAW
              content: "[\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Clementine Bauch\",\r\n\
                \    \"username\": \"Samantha\",\r\n    \"email\": \"Nathan@yesenia.net\",\r\n\
                \    \"address\": {\r\n      \"street\": \"Douglas Extension\",\r\n      \"suite\"\
                : \"Suite 847\",\r\n      \"city\": \"McKenziehaven\",\r\n      \"zipcode\": \"\
                59590-4157\",\r\n      \"geo\": {\r\n        \"lat\": \"-68.6102\",\r\n      \
                \  \"lng\": \"-47.0653\"\r\n      }\r\n    },\r\n    \"phone\": \"1-463-123-4447\"\
                ,\r\n    \"website\": \"ramiro.info\",\r\n    \"company\": {\r\n      \"name\"\
                : \"Romaguera-Jacobson\",\r\n      \"catchPhrase\": \"Face to face bifurcated\
                \ interface\",\r\n      \"bs\": \"e-enable strategic applications\"\r\n    }\r\
                \n  }\r\n]"
            
        >>
    step: Then the HTTP response should be <<{{verify_added_new_user}}>>
        var verify_added_new_user = <<
            expectedStatusCode: 201
            
        >>
    step: When I execute the HTTP request <<{{get_list_with_three_users}}>>
        var get_list_with_three_users = <<
            method: GET
            url: http://localhost:12101/users
            followRedirects: true
            headers: {}
            
        >>
    step: Then the HTTP response should be <<{{verify_three_users_in_the_list}}>>
        var verify_three_users_in_the_list = <<
            expectedStatusCode: 200
            expectedBody:
              httpBodyVerifyMatchingType: JSON_VERIFY
              httpBodyType: JSON
              bodyVerify: "[\"=compareMode: exact\",\r\n  {\r\n    \"id\": 1,\r\n    \"name\"\
                : \"Leanne Graham\",\r\n    \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\"\
                ,\r\n    \"address\": {\r\n      \"street\": \"Kulas Light\",\r\n      \"suite\"\
                : \"Apt. 556\",\r\n      \"city\": \"Gwenborough\",\r\n      \"zipcode\": \"92998-3874\"\
                ,\r\n      \"geo\": {\r\n        \"lat\": \"-37.3159\",\r\n        \"lng\": \"\
                81.1496\"\r\n      }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n\
                \    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n      \"name\":\
                \ \"Romaguera-Crona\",\r\n      \"catchPhrase\": \"Multi-layered client-server\
                \ neural-net\",\r\n      \"bs\": \"harness real-time e-markets\"\r\n    }\r\n\
                \  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Ervin Howell\",\r\n    \"username\"\
                : \"Antonette\",\r\n    \"email\": \"Shanna@melissa.tv\",\r\n    \"address\":\
                \ {\r\n      \"street\": \"Victor Plains\",\r\n      \"suite\": \"Suite 879\"\
                ,\r\n      \"city\": \"Wisokyburgh\",\r\n      \"zipcode\": \"90566-7771\",\r\n\
                \      \"geo\": {\r\n        \"lat\": \"-43.9509\",\r\n        \"lng\": \"-34.4618\"\
                \r\n      }\r\n    },\r\n    \"phone\": \"010-692-6593 x09125\",\r\n    \"website\"\
                : \"anastasia.net\",\r\n    \"company\": {\r\n      \"name\": \"Deckow-Crist\"\
                ,\r\n      \"catchPhrase\": \"Proactive didactic contingency\",\r\n      \"bs\"\
                : \"synergize scalable supply-chains\"\r\n    }\r\n  },\r\n  {\r\n    \"id\":\
                \ 3,\r\n    \"name\": \"Clementine Bauch\",\r\n    \"username\": \"Samantha\"\
                ,\r\n    \"email\": \"Nathan@yesenia.net\",\r\n    \"address\": {\r\n      \"\
                street\": \"Douglas Extension\",\r\n      \"suite\": \"Suite 847\",\r\n      \"\
                city\": \"McKenziehaven\",\r\n      \"zipcode\": \"59590-4157\",\r\n      \"geo\"\
                : {\r\n        \"lat\": \"-68.6102\",\r\n        \"lng\": \"-47.0653\"\r\n   \
                \   }\r\n    },\r\n    \"phone\": \"1-463-123-4447\",\r\n    \"website\": \"ramiro.info\"\
                ,\r\n    \"company\": {\r\n      \"name\": \"Romaguera-Jacobson\",\r\n      \"\
                catchPhrase\": \"Face to face bifurcated interface\",\r\n      \"bs\": \"e-enable\
                \ strategic applications\"\r\n    }\r\n  }\r\n]"
            
        >>
