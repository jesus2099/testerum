receiveModel([{"time":"2018-12-27T11:13:11.177","logLevel":"INFO","message":"Executing step BASIC: GIVEN the HTTP Mock Server <<httpMockServer = file:Sample Mock Server.http.mock.server.yaml>> with the Mock Request <<httpMock = {\"expectedRequest\":{\"method\":\"GET\",\"url\":\"/users/([0-9]+)\"},\"mockResponse\":{\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\"},\"body\":{\"bodyType\":\"JSON\",\"content\":\"{\\n    \\\"userName\\\": \\\"Ionut Pruteanu\\\",\\n    \\\"email\\\": \\\"ipruteanu@testerum.com\\\"\\n}\"}}}>>"},{"time":"2018-12-27T11:13:11.288","logLevel":"INFO","message":"Finished executing step BASIC: GIVEN the HTTP Mock Server <<httpMockServer = file:Sample Mock Server.http.mock.server.yaml>> with the Mock Request <<httpMock = {\"expectedRequest\":{\"method\":\"GET\",\"url\":\"/users/([0-9]+)\"},\"mockResponse\":{\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/json\"},\"body\":{\"bodyType\":\"JSON\",\"content\":\"{\\n    \\\"userName\\\": \\\"Ionut Pruteanu\\\",\\n    \\\"email\\\": \\\"ipruteanu@testerum.com\\\"\\n}\"}}}>>"},]);