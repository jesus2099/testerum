receiveModel([{"time":"2018-12-27T18:09:42.536","logLevel":"INFO","message":"     __  __                                             __  __"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"    / / / / _____         _                             \\ \\ \\ \\"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"   / / / / |_   _|__  ___| |_ ___ _ __ _   _ _ __ ___    \\ \\ \\ \\"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"  ( ( ( (    | |/ _ \\/ __| __/ _ \\ '__| | | | '_ ` _ \\    ) ) ) )"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"   \\ \\ \\ \\   | |  __/\\__ \\ ||  __/ |  | |_| | | | | | |  / / / /"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"    \\_\\ \\_\\  |_|\\___||___/\\__\\___|_|   \\__,_|_| |_| |_| /_/ /_/"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"cmdlineParams = CmdlineParams(repositoryDirectory=/home/cvmocanu/Development/testerum/testerum-demos/pet-clinic-angular2/tests, basicStepsDirectory=/home/cvmocanu/Development/testerum/testerum/package/basic_steps, settingsFile=null, settingOverrides={}, testFilesOrDirectories=[/home/cvmocanu/Development/testerum/testerum-demos/pet-clinic-angular2/tests/features/unrelated], verbose=false, outputFormatsWithProperties=[CONSOLE_DEBUG, JSON_MODEL:destinationDirectory=/media/cvmocanu/data/temp/test-results])"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"Settings:"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"---------"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"[testerum.packageDirectory] = [/home/cvmocanu/Development/testerum/testerum/package]"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"[testerum.repositoryDirectory] = [/home/cvmocanu/Development/testerum/testerum-demos/pet-clinic-angular2/tests]"},{"time":"2018-12-27T18:09:42.537","logLevel":"INFO","message":"[testerum.builtInBasicStepsDirectory] = [/home/cvmocanu/Development/testerum/testerum/package/basic_steps]"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"[testerum.jdbcDriversDirectory] = [/home/cvmocanu/Development/testerum/testerum/package/relational_database_drivers]"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:41.066 [main] INFO com.testerum.scanner.step_lib_scanner.StepLibraryPersistentCacheManger - scanning 93 jars..."},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:42.291 [main] INFO com.testerum.scanner.step_lib_scanner.StepLibraryPersistentCacheManger - scanning 93 jars took 1223 ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:42.292 [main] INFO com.testerum.file_service.caches.resolved.StepsCache - loading step libraries (41 steps & 6 hooks) took 1226 ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:42.337 [main] INFO com.testerum.file_service.caches.resolved.StepsCache - loading 43 composed steps took 45 ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:42.407 [main] INFO com.testerum.file_service.caches.resolved.StepsCache - resolving 83 steps took 70 ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:42.463 [main] INFO com.testerum.file_service.caches.resolved.TestsCache - loading 35 tests took 55 ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"18:09:42.472 [main] INFO com.testerum.file_service.caches.resolved.FeaturesCache - loading 9 features took 9 ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"------------------------------[ execution tree ]------------------------------"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"Suite"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"    hook BEFORE_ALL_TESTS: selenium.actions.hooks.WebDriverShutdownHook.registerShutdownHook()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"    feature 'unrelated'"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"        feature 'super hero squad'"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            test '\"Eternal Flame\" is immortal'"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                hook BEFORE_EACH_TEST: http.mock.HttpMockSteps.beforeTest()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                step BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:heroes/Hero Squad.http.stub.yaml>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                step BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                step BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                hook AFTER_EACH_TEST: selenium.actions.hooks.WebDriverShutdownHook.destroyWebDriver()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            test 'Verify full squad'"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                hook BEFORE_EACH_TEST: http.mock.HttpMockSteps.beforeTest()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                step BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:heroes/Hero Squad.http.stub.yaml>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                step BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                step BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"                hook AFTER_EACH_TEST: selenium.actions.hooks.WebDriverShutdownHook.destroyWebDriver()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"        test 'JS expressions'"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            hook BEFORE_EACH_TEST: http.mock.HttpMockSteps.beforeTest()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: GIVEN the variable <<name=today>> with value <<value={{new Date().toISOString().substr(0, 10)...>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: THEN <<actualValue={{today}}>> is equal to <<expectedValue=2018-11-29>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: GIVEN the variable <<name=tenDaysFromToday>> with value <<value={{(function(){var futureDate = new Date(...>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: THEN <<actualValue={{tenDaysFromToday}}>> is equal to <<expectedValue=2018-12-09>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            hook AFTER_EACH_TEST: selenium.actions.hooks.WebDriverShutdownHook.destroyWebDriver()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"        test 'Mock Get User'"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            hook BEFORE_EACH_TEST: http.mock.HttpMockSteps.beforeTest()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            step BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"            hook AFTER_EACH_TEST: selenium.actions.hooks.WebDriverShutdownHook.destroyWebDriver()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"    hook AFTER_ALL_TESTS: selenium.actions.hooks.SeleniumModuleBootstrapperShutdownHook.shutdownContext()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"    hook AFTER_ALL_TESTS: http.HttpStepsShutdownHook.shutdown()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"    hook AFTER_ALL_TESTS: database.relational.RdbmsStepsShutdownHook.shutdown()"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"------------------------------------------------------------------------------"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":"STARTUP TIME: 2372ms"},{"time":"2018-12-27T18:09:42.538","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:42.633","logLevel":"INFO","message":"Started executing test suite"},{"time":"2018-12-27T18:09:42.639","logLevel":"INFO","message":"18:09:42.633 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_ALL_TESTS, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=registerShutdownHook, order=1000000, description=null)"},{"time":"2018-12-27T18:09:42.639","logLevel":"INFO","message":"18:09:42.639 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_ALL_TESTS, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=registerShutdownHook, order=1000000, description=null)"},{"time":"2018-12-27T18:09:42.639","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:42.64","logLevel":"INFO","message":"Started executing feature [unrelated]"},{"time":"2018-12-27T18:09:42.641","logLevel":"INFO","message":"Started executing feature [super hero squad]"},{"time":"2018-12-27T18:09:42.643","logLevel":"INFO","message":"Started executing test [\"Eternal Flame\" is immortal] at [unrelated/super hero squad/_Eternal Flame_ is immortal.test]"},{"time":"2018-12-27T18:09:43.203","logLevel":"INFO","message":"18:09:42.645 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:43.203","logLevel":"INFO","message":"18:09:43.203 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:43.203","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:43.206","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:heroes/Hero Squad.http.stub.yaml>>]"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"18:09:44.845 [main] INFO wiremock.org.eclipse.jetty.util.log - Logging initialized @4869ms"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"18:09:44.921 [main] INFO wiremock.org.eclipse.jetty.server.Server - jetty-9.2.z-SNAPSHOT"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"18:09:44.938 [main] INFO wiremock.org.eclipse.jetty.server.handler.ContextHandler - Started w.o.e.j.s.ServletContextHandler@3ab70d34{/__admin,null,AVAILABLE}"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"18:09:44.938 [main] INFO wiremock.org.eclipse.jetty.server.handler.ContextHandler - Started w.o.e.j.s.ServletContextHandler@7af0693b{/,null,AVAILABLE}"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"18:09:44.950 [main] INFO wiremock.org.eclipse.jetty.server.NetworkTrafficServerConnector - Started NetworkTrafficServerConnector@37f627d0{HTTP/1.1}{0.0.0.0:12121}"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"18:09:44.950 [main] INFO wiremock.org.eclipse.jetty.server.Server - Started @4975ms"},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:44.981","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:heroes/Hero Squad.http.stub.yaml>>]; status: [PASSED]"},{"time":"2018-12-27T18:09:44.987","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T18:09:45.053","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/heros\n\n]"},{"time":"2018-12-27T18:09:45.577","logLevel":"INFO","message":"18:09:45.186 [qtp848019559-20] INFO / - RequestHandlerClass from context returned com.github.tomakehurst.wiremock.http.StubRequestHandler. Normalized mapped under returned 'null'"},{"time":"2018-12-27T18:09:45.577","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:45.577","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\n  \"squadName\" : \"Super hero squad\",\n  \"homeTown\" : \"Metro City\",\n  \"formed\" : 2016,\n  \"secretBase\" : \"Super tower\",\n  \"active\" : true,\n  \"members\" : [ {\n    \"name\" : \"Molecule Man\",\n    \"age\" : 29,\n    \"secretIdentity\" : \"Dan Jukes\",\n    \"powers\" : [ \"Radiation resistance\", \"Turning tiny\", \"Radiation blast\" ]\n  }, {\n    \"name\" : \"Madame Uppercut\",\n    \"age\" : 39,\n    \"secretIdentity\" : \"Jane Wilson\",\n    \"powers\" : [ \"Million tonne punch\", \"Damage resistance\", \"Superhuman reflexes\" ]\n  }, {\n    \"name\" : \"Eternal Flame\",\n    \"age\" : 1000000,\n    \"secretIdentity\" : \"Unknown\",\n    \"powers\" : [ \"Immortality\", \"Heat Immunity\", \"Inferno\", \"Teleportation\", \"Interdimensional travel\" ]\n  } ]\n}\n]"},{"time":"2018-12-27T18:09:45.579","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T18:09:45.579","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.58","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T18:09:45.719","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.721","logLevel":"INFO","message":"18:09:45.720 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:45.721","logLevel":"INFO","message":"18:09:45.720 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:45.721","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:45.721","logLevel":"INFO","message":"Finished executing test [\"Eternal Flame\" is immortal] at [unrelated/super hero squad/_Eternal Flame_ is immortal.test]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.725","logLevel":"INFO","message":"Started executing test [Verify full squad] at [unrelated/super hero squad/Verify full squad.test]"},{"time":"2018-12-27T18:09:45.726","logLevel":"INFO","message":"18:09:45.725 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:45.726","logLevel":"INFO","message":"18:09:45.725 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:45.726","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:45.728","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:heroes/Hero Squad.http.stub.yaml>>]"},{"time":"2018-12-27T18:09:45.822","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock=file:heroes/Hero Squad.http.stub.yaml>>]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.823","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T18:09:45.862","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/heros\n\n]"},{"time":"2018-12-27T18:09:45.873","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\n  \"squadName\" : \"Super hero squad\",\n  \"homeTown\" : \"Metro City\",\n  \"formed\" : 2016,\n  \"secretBase\" : \"Super tower\",\n  \"active\" : true,\n  \"members\" : [ {\n    \"name\" : \"Molecule Man\",\n    \"age\" : 29,\n    \"secretIdentity\" : \"Dan Jukes\",\n    \"powers\" : [ \"Radiation resistance\", \"Turning tiny\", \"Radiation blast\" ]\n  }, {\n    \"name\" : \"Madame Uppercut\",\n    \"age\" : 39,\n    \"secretIdentity\" : \"Jane Wilson\",\n    \"powers\" : [ \"Million tonne punch\", \"Damage resistance\", \"Superhuman reflexes\" ]\n  }, {\n    \"name\" : \"Eternal Flame\",\n    \"age\" : 1000000,\n    \"secretIdentity\" : \"Unknown\",\n    \"powers\" : [ \"Immortality\", \"Heat Immunity\", \"Inferno\", \"Teleportation\", \"Interdimensional travel\" ]\n  } ]\n}\n]"},{"time":"2018-12-27T18:09:45.874","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T18:09:45.874","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.875","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T18:09:45.945","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.946","logLevel":"INFO","message":"18:09:45.946 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:45.946","logLevel":"INFO","message":"18:09:45.946 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:45.946","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:45.946","logLevel":"INFO","message":"Finished executing test [Verify full squad] at [unrelated/super hero squad/Verify full squad.test]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.949","logLevel":"INFO","message":"Finished executing feature [super hero squad]; status: [PASSED]"},{"time":"2018-12-27T18:09:45.951","logLevel":"INFO","message":"Started executing test [JS expressions] at [unrelated/JS expressions.test]"},{"time":"2018-12-27T18:09:45.952","logLevel":"INFO","message":"18:09:45.952 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:45.952","logLevel":"INFO","message":"18:09:45.952 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:45.952","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:45.953","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the variable <<name=today>> with value <<value={{new Date().toISOString().substr(0, 10)...>>]"},{"time":"2018-12-27T18:09:46.013","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the variable <<name=today>> with value <<value={{new Date().toISOString().substr(0, 10)...>>]; status: [PASSED]"},{"time":"2018-12-27T18:09:46.014","logLevel":"INFO","message":"Started executing step [BASIC: THEN <<actualValue={{today}}>> is equal to <<expectedValue=2018-11-29>>]"},{"time":"2018-12-27T18:09:46.069","logLevel":"INFO","message":"Finished executing step [BASIC: THEN <<actualValue={{today}}>> is equal to <<expectedValue=2018-11-29>>]; status: [FAILED]","exceptionDetail":{"exceptionClassName":"java.lang.AssertionError","message":"expected [1979] to be equal to [2018-11-29], but was not","stackTrace":[{"className":"assertions.AssertionsSteps","methodName":"assertEqualValues","fileName":"AssertionsSteps.kt","lineNumber":12,"nativeMethod":false},{"className":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke0","fileName":"NativeMethodAccessorImpl.java","lineNumber":-2,"nativeMethod":true},{"className":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke","fileName":"NativeMethodAccessorImpl.java","lineNumber":62,"nativeMethod":false},{"className":"sun.reflect.DelegatingMethodAccessorImpl","methodName":"invoke","fileName":"DelegatingMethodAccessorImpl.java","lineNumber":43,"nativeMethod":false},{"className":"java.lang.reflect.Method","methodName":"invoke","fileName":"Method.java","lineNumber":498,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.step.impl.RunnerBasicStep","methodName":"doRun","fileName":"RunnerBasicStep.kt","lineNumber":53,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.step.RunnerStep","methodName":"run","fileName":"RunnerStep.kt","lineNumber":32,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest","methodName":"tryToRun","fileName":"RunnerTest.kt","lineNumber":109,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest","methodName":"run","fileName":"RunnerTest.kt","lineNumber":62,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature","methodName":"tryToRun","fileName":"RunnerFeature.kt","lineNumber":61,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature","methodName":"run","fileName":"RunnerFeature.kt","lineNumber":46,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite","methodName":"runTests","fileName":"RunnerSuite.kt","lineNumber":112,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite","methodName":"run","fileName":"RunnerSuite.kt","lineNumber":66,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1","methodName":"invoke","fileName":"RunnerApplication.kt","lineNumber":116,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1","methodName":"invoke","fileName":"RunnerApplication.kt","lineNumber":41,"nativeMethod":false},{"className":"com.testerum.common_kotlin.Classloader_utilsKt","methodName":"runWithThreadContextClassLoader","fileName":"classloader_utils.kt","lineNumber":8,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication","methodName":"tryToExecute","fileName":"RunnerApplication.kt","lineNumber":115,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.RunnerApplication","methodName":"execute","fileName":"RunnerApplication.kt","lineNumber":60,"nativeMethod":false},{"className":"com.testerum.runner_cmdline.TesterumRunner","methodName":"main","fileName":"TesterumRunner.kt","lineNumber":44,"nativeMethod":false}],"suppressed":[],"asString":"java.lang.AssertionError: expected [1979] to be equal to [2018-11-29], but was not","asDetailedString":"java.lang.AssertionError: expected [1979] to be equal to [2018-11-29], but was not\n\tat assertions.AssertionsSteps.assertEqualValues(AssertionsSteps.kt:12)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.step.impl.RunnerBasicStep.doRun(RunnerBasicStep.kt:53)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.step.RunnerStep.run(RunnerStep.kt:32)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest.tryToRun(RunnerTest.kt:109)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.test.RunnerTest.run(RunnerTest.kt:62)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature.tryToRun(RunnerFeature.kt:61)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.feature.RunnerFeature.run(RunnerFeature.kt:46)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite.runTests(RunnerSuite.kt:112)\n\tat com.testerum.runner_cmdline.runner_tree.nodes.suite.RunnerSuite.run(RunnerSuite.kt:66)\n\tat com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1.invoke(RunnerApplication.kt:116)\n\tat com.testerum.runner_cmdline.RunnerApplication$tryToExecute$executionStatus$1.invoke(RunnerApplication.kt:41)\n\tat com.testerum.common_kotlin.Classloader_utilsKt.runWithThreadContextClassLoader(classloader_utils.kt:8)\n\tat com.testerum.runner_cmdline.RunnerApplication.tryToExecute(RunnerApplication.kt:115)\n\tat com.testerum.runner_cmdline.RunnerApplication.execute(RunnerApplication.kt:60)\n\tat com.testerum.runner_cmdline.TesterumRunner.main(TesterumRunner.kt:44)\n"}},{"time":"2018-12-27T18:09:46.082","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the variable <<name=tenDaysFromToday>> with value <<value={{(function(){var futureDate = new Date(...>>]"},{"time":"2018-12-27T18:09:46.082","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the variable <<name=tenDaysFromToday>> with value <<value={{(function(){var futureDate = new Date(...>>]; status: [SKIPPED]"},{"time":"2018-12-27T18:09:46.083","logLevel":"INFO","message":"Started executing step [BASIC: THEN <<actualValue={{tenDaysFromToday}}>> is equal to <<expectedValue=2018-12-09>>]"},{"time":"2018-12-27T18:09:46.083","logLevel":"INFO","message":"Finished executing step [BASIC: THEN <<actualValue={{tenDaysFromToday}}>> is equal to <<expectedValue=2018-12-09>>]; status: [SKIPPED]"},{"time":"2018-12-27T18:09:46.084","logLevel":"INFO","message":"18:09:46.084 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:46.084","logLevel":"INFO","message":"18:09:46.084 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:46.084","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:46.084","logLevel":"INFO","message":"Finished executing test [JS expressions] at [unrelated/JS expressions.test]; status: [FAILED]"},{"time":"2018-12-27T18:09:46.086","logLevel":"INFO","message":"Started executing test [Mock Get User] at [unrelated/Mock Get User.test]"},{"time":"2018-12-27T18:09:46.087","logLevel":"INFO","message":"18:09:46.086 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.087","logLevel":"INFO","message":"18:09:46.087 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=BEFORE_EACH_TEST, className=http.mock.HttpMockSteps, methodName=beforeTest, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.087","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:46.088","logLevel":"INFO","message":"Started executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>]"},{"time":"2018-12-27T18:09:46.175","logLevel":"INFO","message":"Finished executing step [BASIC: GIVEN the HTTP Mock Server <<httpMockServer=file:Sample Mock Server.http.mock.server...>> with the Mock Request <<httpMock={\"expectedRequest\":{\"method\":\"GET\",\"url\"...>>]; status: [PASSED]"},{"time":"2018-12-27T18:09:46.177","logLevel":"INFO","message":"Started executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]"},{"time":"2018-12-27T18:09:46.213","logLevel":"INFO","message":"HTTP Request [\nGET http://localhost:12121/users/1\n\n]"},{"time":"2018-12-27T18:09:46.22","logLevel":"INFO","message":"HTTP Response [\nHTTP/1.1 200\nContent-Type: application/json\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked\nServer: Jetty(9.2.z-SNAPSHOT)\n\n{\n  \"userName\" : \"Ionut Pruteanu\",\n  \"email\" : \"ipruteanu@testerum.com\"\n}\n]"},{"time":"2018-12-27T18:09:46.22","logLevel":"INFO","message":"Http Request executed successfully"},{"time":"2018-12-27T18:09:46.221","logLevel":"INFO","message":"Finished executing step [BASIC: WHEN I execute <<httpRequest={\"method\":\"GET\",\"url\":\"http://localhost:...>> HTTP Request]; status: [PASSED]"},{"time":"2018-12-27T18:09:46.222","logLevel":"INFO","message":"Started executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]"},{"time":"2018-12-27T18:09:46.269","logLevel":"INFO","message":"Finished executing step [BASIC: THEN I expect <<httpResponseVerify={\"expectedStatusCode\":200,\"expectedBody\"...>> HTTP Response]; status: [PASSED]"},{"time":"2018-12-27T18:09:46.27","logLevel":"INFO","message":"18:09:46.269 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:46.27","logLevel":"INFO","message":"18:09:46.269 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_EACH_TEST, className=selenium.actions.hooks.WebDriverShutdownHook, methodName=destroyWebDriver, order=2147483647, description=null)"},{"time":"2018-12-27T18:09:46.27","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:46.27","logLevel":"INFO","message":"Finished executing test [Mock Get User] at [unrelated/Mock Get User.test]; status: [PASSED]"},{"time":"2018-12-27T18:09:46.271","logLevel":"INFO","message":"Finished executing feature [unrelated]; status: [FAILED]"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.271 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_ALL_TESTS, className=selenium.actions.hooks.SeleniumModuleBootstrapperShutdownHook, methodName=shutdownContext, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.272 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_ALL_TESTS, className=selenium.actions.hooks.SeleniumModuleBootstrapperShutdownHook, methodName=shutdownContext, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.272 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_ALL_TESTS, className=http.HttpStepsShutdownHook, methodName=shutdown, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.272 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_ALL_TESTS, className=http.HttpStepsShutdownHook, methodName=shutdown, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.272 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - start executing hook HookDef(phase=AFTER_ALL_TESTS, className=database.relational.RdbmsStepsShutdownHook, methodName=shutdown, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.326 [main] INFO com.testerum.common_rdbms.JdbcDriversCache - loading 4 JDBC driver configs took 4 ms"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"18:09:46.326 [main] INFO com.testerum.runner_cmdline.runner_tree.nodes.hook.RunnerHook - done executing hook HookDef(phase=AFTER_ALL_TESTS, className=database.relational.RdbmsStepsShutdownHook, methodName=shutdown, order=1000000, description=null)"},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":""},{"time":"2018-12-27T18:09:46.327","logLevel":"INFO","message":"Finished executing test suite; status: [FAILED]"},{"time":"2018-12-27T18:09:46.329","logLevel":"INFO","message":""},]);